AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: API Gateway with Lambda Token Authorizer + API Keys
Parameters:
  UsagePlanType:
    Type: String
    Default: PER_API
Globals:
  Api:
      OpenApiVersion: 3.0.0
      Auth:
          ApiKeyRequired: true
          UsagePlan:
              CreateUsagePlan: !Ref UsagePlanType

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: demo-lambda-auth-api-keys
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyAuthFunction.Arn
            # NOTE: Additional options:
            # FunctionInvokeRole: !Ref MyRole
            # Identity:
              # Header: Auth
              # ValidationExpression: Bearer.*
              # ReauthorizeEvery: 30 # seconds

  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: index.handler
      Runtime: nodejs12.x
      FunctionName: demo-func-keys
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /
            Method: get
            # NOTE: Uncomment the two lines below to make `GET /` publicly accessible
            # Auth:
            #   Authorizer: NONE
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /users
            Method: get
  
  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Handler: authorizer.handler
      Runtime: nodejs12.x
      FunctionName: demo-authorizer-func-keys

Outputs:
  ApiURL:
    Description: "API URL"
    Value: !Sub 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'